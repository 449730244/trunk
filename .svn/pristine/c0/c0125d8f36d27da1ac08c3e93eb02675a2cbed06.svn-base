<?php
namespace App\Http\Controllers\Traits;

use GatewayClient\Gateway;
use App\Exceptions\InvalidRequestException;

trait GatewayClient{
    /**
     * 通知到群
     * @param String $groupName
     * @param array $message
     * @throws \Exception
     */
    public function sendToGroup(String $groupName, Array $message){
        Try{

            Gateway::sendToGroup($groupName, json_encode($message));

        }catch (\Exception $exception){

            throw new InvalidRequestException($exception->getMessage(), '31000', 500);

        }

    }

    /**
     * 用户添加到群
     * @param array $uidArr
     * @param String $groupName
     * @throws InvalidRequestException
     */
    public function joinGroup(Array $uidArr, String $groupName){

        Try{

            $clintArr = $uidArr;
            $clintIds = [];
            foreach ($clintArr as $userId){
                $clintIds = array_merge($clintIds, Gateway::getClientIdByUid($userId));
            }

            foreach ($clintIds as $clintId){
                Gateway::joinGroup($clintId, $groupName);
            }

        }catch (\Exception $exception){

            throw new InvalidRequestException($exception->getMessage(), '31001', 500);

        }
    }

    /**
     * 向客户端发送数据
     * @param array $uidArr
     * @param array $message
     * @throws InvalidRequestException
     */
    public function sendToUid(Array $uidArr, Array $message){

        Try{

            Gateway::sendToUid($uidArr, json_encode($message));

        }catch (\Exception $exception){

            throw new InvalidRequestException($exception->getMessage(), '31002', 500);

        }
    }

    /**
     * 从群聊移除用户
     * @param Integer $uid
     * @param String $group_name
     * @throws InvalidRequestException
     */
    public function levelGroup(Int $uid, String $group_name){

        Try{

            $clintIds = Gateway::getClientIdByUid($uid);
            foreach ($clintIds as $clintId){
                Gateway::leaveGroup($clintId, $group_name);
            }

        }catch (\Exception $exception){

            throw new InvalidRequestException($exception->getMessage(), '31003', 500);

        }

    }

    /**
     * 解散群
     * @param String $group_name
     * @throws InvalidRequestException
     */
    public function unGroup(String $group_name){

        Try{

            Gateway::ungroup($group_name);

        }catch (\Exception $exception){

            throw new InvalidRequestException($exception->getMessage(), '31004', 500);

        }
    }

}